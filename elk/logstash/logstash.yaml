apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipelines
data:
  pipeline1.conf: |
    input {
      beats {
        port => 5045
        tags => ["cc"]
      }
    }
    filter {
      if "cc" in [tags] or "cc-product-catalog" in [app_id] or "cc-product-offering" in [app_id] or "cc-quote-management" in [app_id] or "cc-location" in [app_id] or "cc-api-manager" in [app_id] or "cc-camunda" in [app_id] or "cc-cpq" in [app_id] or "cc-order-management" in [app_id] or "cc-hop-web" in [app_id] or "cc-hop-server" in [app_id] {
        grok {
          match => {
            "message" => [
              "%{DATA:micro-service} %{TIMESTAMP_ISO8601:timestamp} \[%{DATA:class}\] %{LOGLEVEL:loglevel} %{DATA:class2} - \[CorrelationId :%{DATA:CorrelationId}\] : %{GREEDYDATA:app_log}", "%{DATE_US:date} %{TIME:time} - %{GREEDYDATA:message}"
            ]
          }
          match => {
            "message" => [
              "%{DATESTAMP:timestamp} - %{GREEDYDATA:message}"
            ]
    }
          break_on_match => true
          add_tag => ["dev-logs"]
        }
      }
    }
    output {
      elasticsearch {
        hosts => ["elasticsearch-master:9200"]
        index => "cc-dev-%{+YYYY.MM.dd}"
      }
    }

  pipeline2.conf: |
    input {
      beats {
        port => 5046
        tags => ["con"]
      }
    }
    filter {
      if "con" in [tags] or "con-ms-camunda" in [app_id] or "con-ms-core-cmd" in [app_id] or "con-ms-wso2is" in [app_id] or "con-ms-is-wrapper" in [app_id] or "con-ms-notification" in [app_id] or "con-ms-project-management" in [app_id] or "con-ms-service-configuration" in [app_id] or "con-ms-service-manager" in [app_id] or "con-ms-task-management" in [app_id] or "con-ms-ui" in [app_id] or "con-ms-vendor-configuration" in [app_id] or "con-ms-wso2am" in [app_id] or "con-ms-cmd" in [app_id] {
        grok {
          match => {
            "message" => [
              "%{DATA:micro-service} %{TIMESTAMP_ISO8601:timestamp} \[%{DATA:class}\] %{LOGLEVEL:loglevel} %{DATA:class2} - \[CorrelationId :%{DATA:CorrelationId}\] : %{GREEDYDATA:app_log}"
            ]
          }
          break_on_match => true
          add_tag => ["con-logs"]
        }
      }
    }
    output {
      elasticsearch {
        hosts => ["elasticsearch-master:9200"]
        index => "con-dev-%{+YYYY.MM.dd}"
      }
    }

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logstash
spec:
  serviceName: logstash
  replicas: 2  # Adjust as needed
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.15.0
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/config
        - name: logstash-pipelines
          mountPath: /usr/share/logstash/pipeline
      volumes:
        - name: logstash-config
          configMap:
            name: logstash-config
        - name: logstash-pipelines
          configMap:
            name: logstash-pipelines

---

apiVersion: v1
kind: Service
metadata:
  name: logstash-logstash
spec:
  selector:
    app: logstash
  ports:
  - name: beats-prod
    port: 5046
    targetPort: 5046
  - name: beats-dev
    port: 5045
    targetPort: 5045
